@model ChatViewModel
@{
    Layout = "_Layout";
}


@*<div class="chat-body">


        @foreach (var message in Model.Messages)
        {
            <div class="message">
                <header>@message.Name:</header>
                <p>@message.Text</p>
                <footer>@message.Timestamp</footer>
            </div>
        }

    </div>*@
@*<form class="chat-input" onsubmit="sendMessage(event)" asp-controller="Home" asp-action="CreateMessageAsync">
        <input type="hidden" name="groupId" value="@Model.Id" />
        <input type="text" name="message" id="message-input" />
        <button type="submit">Send</button>

    </form>*@

    <div class="chat_body">
        @foreach (var message in Model.Messages)
        {
            @if (message.Type == MessageType.Incoming)
            {
                <div class="incoming_message_info">
                    <div class="incoming_user_img">  </div>
                    <div class="incoming_message">
                        <div class="incoming_message_text">
                            <p>
                                @message.Text
                            </p>
                            <span class="message_date">@message.Timestamp@*.ToString("hh:mm | d MMM")*@</span>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="outgoing_message_info">
                    <div class="outgoing_message_text">
                        <p>
                            @message.Text
                        </p>
                        <span class="message_date">@message.Timestamp@*.ToString("hh:mm | d MMM")*@</span>
                    </div>
                </div>
            }
        }
    </div>

@*@message.Timestamp.Hour:@message.Timestamp.Minute|@message.Timestamp. @message.Timestamp.Day*@

@*<img src="https://ptetutorials.com/images/user-profile.png" alt="sunil">*@

@*<div class="message">
        <header>@message.Name:</header>
        <p>@message.Text</p>
        <footer>@message.Timestamp</footer>
    </div>*@

<form class="chat-input" onsubmit="sendMessage(event)" asp-controller="Home" asp-action="CreateMessageAsync">
    <input type="hidden" name="groupId" value="@Model.Id" />
    <input type="hidden" name="groupName" value="@Model.Name" />
    <input type="text" name="message" id="message-input" />
    <button type="submit">Send</button>
</form>


<script src="~/js/signalr.min.js"></script>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
@*<script src="~/js/site.js"></script>*@


@*@section scripts{*@
@*<script src="wwwroot/js/signalr/dist/browser/signalr.js"></script>*@



<script>

    var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();



    var _connectionId = '';

    connection.on("ReceiveMessage", function (data) {
        console.log(data);

        if (data.type == 1) {               

            var messageInfo = document.createElement("div");
            messageInfo.classList.add("outgoing_message_info");

            var messageText = document.createElement("div");
            messageText.classList.add("outgoing_message_text");

            var p = document.createElement("p");
            p.appendChild(document.createTextNode(data.text));

            var message_date = document.createElement("span");
            message_date.classList.add("message_date");
            message_date.appendChild(document.createTextNode(data.timestamp));

            messageInfo.appendChild(messageText);
            messageText.appendChild(p);
            messageText.appendChild(message_date);

            document.querySelector('.chat_body').append(messageInfo);

            //var messageInfo = document.createElement("div");
            //messageInfo.classList.add("message_info");

            //var userImg = document.createElement("div");
            //userImg.classList.add("user_img");

            //var message = document.createElement("div");
            //message.classList.add("message");

            //messageInfo.appendChild(userImg);
            //messageInfo.appendChild(message);

            //var messageText = document.createElement("div");
            //messageText.classList.add("message_text");

            

            //message.appendChild(messageText);
            //messageText.appendChild(p);
            //message.appendChild(message_date);

           
        }
    })

    var joinGroup = function () {
        // var url = 'Chat/JoinChatAsync/' + _connectionId + '/@Model.Name'
        const bodyForm = new FormData();
        bodyForm.set('connectionId', _connectionId);
        bodyForm.append('groupName', '@Model.Name');

        axios.post('Chat/JoinChatAsync', bodyForm)
        //axios.post(url,null)
            .then(res => {
                console.log("Group joined!", res);
            })
            .catch(err => {
                console.log("Failed to join this group", err);
            })
    }

    connection.start()
        .then(function () {
            connection.invoke('GetConnectionId')
                .then(function (connectionId) {
                    _connectionId = connectionId
                    joinGroup();
                })
        })
        .catch(function (err) {
            console.log(err)
        })


    var sendMessage = function (event) {
        event.preventDefault();


        var data = new FormData(event.target);

        document.getElementById('message-input').value = '';


        axios.post('Chat/SendMessageAsync', data)
            .then(res => {
                console.log("Message Sent");
            })
            .catch(err => {
                console.log("Failed to send message");
            })

    }
</script>
@*}*@






@*//async function start() {
    //    try {
    //        await connection.start();
    //        console.log("connected");
    //    } catch (err) {
    //        console.log(err);
    //        settimeout(() => start(), 5000);
    //    }
    //};*@