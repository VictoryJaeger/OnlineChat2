@model ChatViewModel

@{
    Layout = "_Layout";
}

<div class="inbox_chats_new">
    <form class="create_pr_chat_notify_form" onsubmit="notifyAboutCreating(event)" asp-controller="Home" asp-action="CreatePrivateChatAsync">
        <input type="hidden" name="chatId" value="@Model.Id" />
        <input type="hidden" name="chatName" value="@Model.Name" />
        <div class="default_message_text">
            <p>
                Chat "@Model.Name" has been created
            </p>
        </div>
        <button type="submit" class="btn btn-light crt_p_chat">Go to chat</button>
    </form>
</div>


<script src="~/js/signalr.min.js"></script>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script type="module" src="~/js/site.js"></script>

<script>

    var homeConnection = new signalR.HubConnectionBuilder().withUrl("/homeHub")
        .withAutomaticReconnect()
        .build();

        var _connectionId = '';

    homeConnection.on("ChatCreated", function (data) {
            console.log(data);

            console.log('start display data');
            var chatListItem = document.createElement("div");
            chatListItem.classList.add("chat_list_item");

            console.log('1');
            var chatDetail = document.createElement("div");
            chatDetail.classList.add("chat_detail");

            console.log('2');
            var chatImg = document.createElement("div");
            chatImg.classList.add("chat_img");

            console.log('3');
            var chatDetailInfo = document.createElement("div");
            chatDetailInfo.classList.add("chat_detail_info");

            console.log('4');
            var chatName = document.createElement("h5");
            chatName.appendChild(document.createTextNode(data.name));

            console.log('5');
            var chatDate = document.createElement("span");
            chatDate.classList.add("chat_date");
            chatDate.appendChild(document.createTextNode(data.lastMessageDate));

            console.log('6');
            var p = document.createElement("p");
            p.appendChild(document.createTextNode(data.lastMessageAuthor + ' : ' + data.lastMessage));

            console.log('create tree');

            chatListItem.appendChild(chatDetail);
            console.log('add chatDetail');

            chatDetail.appendChild(chatImg);
            chatDetail.appendChild(chatDetailInfo);
            chatDetailInfo.appendChild(chatName);
            chatDetailInfo.appendChild(p);
            chatName.appendChild(chatDate);

            console.log('add new chat');
            document.querySelector('.inbox_chats').append(chatListItem);
            //debugger;
            console.log("data has been displayed");
        })

    homeConnection.on("ChatCreatedToAll", function (data)
    {
        console.log(data + 'created');
    })

        var connectPrivateChat = function () {
            const bodyForm = new FormData();
            bodyForm.set('connectionId', _connectionId);
            bodyForm.append('groupName', '@Model.Name');
            bodyForm.append('participantConId', '@Model.UsersConnectionId.Last()')

            console.log('@Model.UsersConnectionId.Last()');
            //debugger;
            axios.post('Home/ConnectToPrivateChat', bodyForm)
                //axios.post(url,null)
                .then(res => {
                    console.log("connect to Private Chat", res);
                })
                .catch(err => {
                    console.log("Failed to connect private Chat", err);
                })
        }


    homeConnection.start()
            .then(function () {
                homeConnection.invoke('GetConnectionId')
                    .then(function (connectionId) {
                        _connectionId = connectionId
                        console.log("connected to homeHub");
                        connectPrivateChat();
                    })
            })
            .catch(function (err) {
                console.log(err)
            })


        var notifyAboutCreating = function (event) {
            //if(event)
            event.preventDefault();

            //debugger;
            var data = new FormData(event.target);
            //data.append('connectionId', _connectionId);

            //document.getElementById('message-input').value = '';

            axios.post('Home/SendNotificationAboutCreatingChat', data)
                .then(res => {
                    console.log("Notification delivered");
                    //debugger;
                })
                .catch(err => {
                    console.log("Failed to send notification");
                })

        }

</script>