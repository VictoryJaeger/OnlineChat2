@model CreatePrivateChatViewModel

@{
    Layout = "_Layout";
}

<form class="create_pr_chat_form" asp-controller="Home" asp-action="CreatePrivateChatAsync" onsubmit="notifyAboutCreating(event)">
    <input type="hidden" name="Id" value="@Model.UserId" />
    <button type="submit" class="btn btn-light crt_p_chat">Create chat with @Model.UserName?</button>
</form>




<script src="~/js/signalr.min.js"></script>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>

<script>

    var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub")
        .withAutomaticReconnect()
        .build();

    var _connectionId = '';

    connection.on("PRCC", function(data) {

        //debugger;
        console.log(data);

        debugger;
        var chatListItem = document.createElement("div");
        chatListItem.classList.add("chat_list_item");

        var chatDetail = document.createElement("div");
        chatDetail.classList.add("chat_detail");

        var chatImg = document.createElement("div");
        chatImg.classList.add("chat_img");

        var chatDetailInfo = document.createElement("div");
        chatDetailInfo.classList.add("chat_detail_info");

        var chatName = document.createElement("h5");
        chatName.appendChild(document.createTextNode(data.name));

        var chatDate = document.createElement("span");
        chatDate.classList.add("chat_date");
        chatDate.appendChild(document.createTextNode(data.lastmessagedate));

        var p = document.createElement("p");
        p.appendChild(document.createTextNode(data.lastmessageauthor, ':', data.lastmessage));

        //    var p = document.createElement("p");
        //    p.appendChild(document.createTextNode(data.text));

        //    var message_date = document.createElement("span");
        //    message_date.classList.add("message_date");
        //    message_date.appendChild(document.createTextNode(data.timestamp));

        //    messageInfo.appendChild(messageText);
        //    messageText.appendChild(p);
        //    messageText.appendChild(message_date);

        document.querySelector('.inbox_chat').append(chat_list_item);

    })

    //var createPrivateChat = function () {
    //    const bodyForm = new FormData();
    //    bodyForm.set('connectionId', _connectionId);

    //    axios.post('Home/CreatePrivateChatAsync', bodyForm)
    //        //axios.post(url,null)
    //        .then(res => {
    //            console.log("Private Chat created!", res);
    //        })
    //        .catch(err => {
    //            console.log("Failed to create private Chat", err);
    //        })
    //}    


    connection.start().catch(err => console.log(err))
        .then(function () {
            connection.invoke('GetConnectionId')
                .then(function (connectionId) {
                    _connectionId = connectionId
                    console.log("connected to hub");
                    //createPrivateChat();
                })
        })
        .catch(function (err) {
            console.log(err)
        })

    connection.serverTimeoutInMilliseconds = 1000 * 60 * 10;



    var notifyAboutCreating = function (event) {
        //if(event)
        event.preventDefault();

        //debugger;
        var data = new FormData(event.target);
        data.append('connectionId', _connectionId);

        //document.getElementById('message-input').value = '';

        axios.post('Home/CreatePrivateChatAsync', data)
            .then(res => {
                console.log("Notification delivered", res);
                //debugger;
            })
            .catch(err => {
                console.log("Failed to send notification", err);
            })

    }

    
</script>





@*<button style="background: none !important; border: none; padding: 0 !important; /*optional*/ font-family: arial, sans-serif; /*input has OS specific font-family*/ color: #069; text-decoration: underline; cursor: pointer;">
        <p>Create chat with @Model.UserName?</p>
    </button>*@

@*asp-controller="Home" asp-action="CreatePrivateChatAsync" asp-route-id="@Model.UserId"*@

@*asp-route-id="@Model.UserId"*@





@*  <div class="modal" tabindex="-1" role="dialog">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Modal title</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <p>Modal body text goes here.</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary">Save changes</button>
                    </div>
                </div>
            </div>
        </div>

    <div class="modal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@Model.UserName</h5>
                    <input type="hidden" name="Id" value="@Model.UserId" />
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form asp-controller="Home" asp-action="CreatePrivateChatAsync">
                        <p>Create chat with this user?</p>
                        <input type="hidden" name="Id" value="@Model.UserId" />
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary">Create</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
*@






@*var joinGroup = function () {

        const bodyForm = new FormData();
        bodyForm.set('connectionId', _connectionId);
        bodyForm.append('groupName', '@Model.Name');

        axios.post('Chat/JoinChatAsync', bodyForm)
            .then(res => {
                console.log("Group joined!", res);
            })
            .catch(err => {
                console.log("Failed to join this group", err);
            })
    }*@